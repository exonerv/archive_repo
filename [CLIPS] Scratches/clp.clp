(defrule startup
    ;В правиле startup мы инициализируем все значения, которыми мы будем манипулировать
    ;в рамках решения ребуса "DEDKA+BABKA+REPKA=SKASKA"
    =>
    ;Выводим краткую информацию по решаемой задаче в консоль
    (printout t " THE PROBLEM IS " t)
    (printout t "    XXXXX| DEDKA" t)
    (printout t " +  XXXXX| BABKA" t)
    (printout t " +  XXXXX| REPKA" t)
    (printout t "   ------|------" t)
    (printout t " = XXXXXX|SKASKA" t)

    ;Объявляем все данные в условии задачи данные - т.е. перечисляем все
    ;возможные значения чисел, которые ставятся в соответствие буквам, а также
    ;перечисляем весь набор букв, входящих в слова, данные по условию.
    (assert (number 0) (number 1) (number 2) (number 3) (number 4)
            (number 5) (number 6) (number 7) (number 8) (number 9)
            (letter D) (letter E) (letter K) (letter A)
            (letter B) (letter R) (letter P) (letter S)
    )
)

(defrule generate
    ;Генерируем основное правило, по которому каждой букве будет последовательно
    ;присваиваться комбинация с той или иной цифрой. В данном случае, правило 
    ;максимально элементарно и для каждой буквы присваивает весь массив чисел от 
    ;0 до 9. 
    (number ?x)
    (letter ?y)
    =>
    (assert (combination ?y ?x))
)

(defrule find-solution
    ;Начиная с последних букв каждого из слов в соответствии с тем порядком,
    ;в котором они представляют из себя операцию суммирования столбиком, выведенную
    ;ранее в консоль, мы последовательно комбинируем их возможные значения, находя
    ;уникальные и, получив, добавляем разряд к итоговому результату.
    ;Конструкция combination непосредственно подбирает комбинации
    (combination A ?a)
    ;Конструкция test тестирует итоговые комбинации
    (test (= (mod (+ ?a ?a ?a) 10) ?a))

    ;С каждой комбинацией мы не должны повторять уже занятые цифры, поэтому добавляем
    ;к конструкции combination все новые и новые условия, в данном случае, чтобы цифра ?k
    ;не была равна ?a. Чем больше цифр мы будем ставить в соответствие, тем все больше будет
    ;становиться кострукция combination
    (combination K ?k&~?a)
    ;Конструкция test также будет становиться все больше, вбирая в себя все больше разрядов.
    ;Собственно, как уже было сказано, проверка соответствий происходит поразрядно.
    (test (= (mod (+ (+ ?a ?a ?a)
            (* (+ ?k ?k ?k) 10))
            100)
        (+ (* 10 ?k) ?a)))

    (combination D ?d&~?k&~?a)
    (combination B ?b&~?d&~?k&~?a)
    (combination P ?p&~?b&~?d&~?k&~?a)
    (combination S ?s&~?p&~?b&~?d&~?k&~?a)
    (test (= (mod (+ (+ ?a ?a ?a)
            (* (+ ?k ?k ?k) 10)
            (* (+ ?d ?b ?p) 100))
            1000)
        (+ (* 100 ?s)(* 10 ?k) ?a)))

    (combination E ?e&~?s&~?p&~?b&~?d&~?k&~?a)
    (test (= (mod (+ (+ ?a ?a ?a)
            (* (+ ?k ?k ?k) 10)
            (* (+ ?d ?b ?p) 100)
            (* (+ ?e ?a ?e) 1000))
            10000)
        (+ (* 1000 ?a)(* 100 ?s)(* 10 ?k) ?a)))

    (combination R ?r&~?e&~?s&~?p&~?b&~?d&~?k&~?a)
    (test (= (mod (+ (+ ?a ?a ?a)
            (* (+ ?k ?k ?k) 10)
            (* (+ ?d ?b ?p) 100)
            (* (+ ?e ?a ?e) 1000)
            (* (+ ?d ?b ?r) 10000))
            100000)
        (+ (* 10000 ?k)(* 1000 ?a)(* 100 ?s)(* 10 ?k) ?a)))

    (test (= (mod (+ (+ ?a ?a ?a)
            (* (+ ?k ?k ?k) 10)
            (* (+ ?d ?b ?p) 100)
            (* (+ ?e ?a ?e) 1000)
            (* (+ ?d ?b ?r) 10000))
            1000000)
        (+ (* 100000 ?s)(* 10000 ?k)(* 1000 ?a)(* 100 ?s)(* 10 ?k) ?a)))

        ;Проверяем, чтобы первые буквы в каждом слове не соответсвовали нулю.
        ;Это условие дано в самой задаче как обязательное.
        (test (> ?d 0))
        (test (> ?b 0))
        (test (> ?r 0))
        (test (> ?s 0))
        =>
        ;Выводим решение задачи, соответствие каждой буквы какой-то цифре,
        ;а также итоговый результат суммирования.
        (printout t " S = " ?s t)
        (printout t " K = " ?k t)
        (printout t " A = " ?a t)
        (printout t " D = " ?d t)
        (printout t " E = " ?e t)
        (printout t " B = " ?b t)
        (printout t " R = " ?r t)
        (printout t " P = " ?p t)
        (printout t t)
        (printout t "   " ?d ?e ?d ?k ?a " |  DEDKA" t)
        (printout t "+  " ?b ?a ?b ?k ?a " |  BABKA" t)
        (printout t "+  " ?r ?e ?p ?k ?a " |  REPKA" t)
        (printout t "= " ?s ?k ?a ?s ?k ?a " | SKASKA" t)
        (printout t t)
)